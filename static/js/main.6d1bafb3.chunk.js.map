{"version":3,"sources":["components/HomePage.tsx","api/api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","style","textAlign","getPeople","a","fetch","response","json","PersonRow","person","name","born","sex","died","father","mother","unknown","className","PeopleTable","people","map","PeoplePage","useState","setPeople","useEffect","then","res","newPersonWithParents","find","parent","fatherName","motherName","NotFoundPage","App","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"gPAAaA,EAAW,kBACtB,mCACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,0B,6CCASC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAAM,GAAD,OAHb,yDAGa,iBADL,cACjBC,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,qDCITC,G,MAAsB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElCC,EAKED,EALFC,KACAC,EAIEF,EAJFE,KACAC,EAGEH,EAHFG,IAAKC,EAGHJ,EAHGI,KACLC,EAEEL,EAFFK,OACAC,EACEN,EADFM,OAEIC,EAAU,mBAAGC,UAAU,UAAb,6BAEhB,OACE,qBAAIA,UAAU,SAAd,UACE,oBAAIA,UAAU,UAAd,SAAyBP,IACzB,oBAAIO,UAAU,SAAd,SAAwBL,IACxB,oBAAIK,UAAU,UAAd,SAAyBN,IACzB,oBAAIM,UAAU,UAAd,SAAyBJ,IACzB,oBAAII,UAAU,gBAAd,UAAqC,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQL,OAAQM,IAC/C,oBAAIC,UAAU,gBAAd,UAAqC,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQJ,OAAQM,SCfxCE,EAAwB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnC,mCACE,wBAAOF,UAAU,cAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,kBAAd,kBACA,oBAAIA,UAAU,iBAAd,iBACA,oBAAIA,UAAU,kBAAd,kBACA,oBAAIA,UAAU,kBAAd,kBACA,oBAAIA,UAAU,wBAAd,oBACA,oBAAIA,UAAU,wBAAd,yBAGJ,gCAEIE,EAAOC,KAAI,SAAAX,GACT,OACE,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOC,iBCtBfW,EAAa,WACxB,MAA4BC,mBAAmC,IAA/D,mBAAOH,EAAP,KAAeI,EAAf,KAwBA,OAJAC,qBAAU,WAjBRrB,IAAYsB,MAAK,SAAAC,GACf,IAAMC,EAA2CD,EAAIN,KACnD,SAACX,GAAD,mBAAC,eACIA,GADL,IAEEK,OAAQY,EAAIE,MACV,SAACC,GAAD,OAAmBA,EAAOnB,OAASD,EAAOqB,eACvC,KACLf,OAAQW,EAAIE,MACV,SAACC,GAAD,OAAmBA,EAAOnB,OAASD,EAAOsB,eACvC,UAITR,EAAUI,QAMX,IAGD,mCACE,cAAC,EAAD,CACER,OAAQA,OChCHa,EAAe,kBAC1B,8BACE,oBAAI/B,MAAO,CAAEC,UAAW,UAAxB,+BCqCW+B,EA5BH,kBACV,sBAAKhB,UAAU,MAAf,UACE,8CAEA,gCACE,cAAC,IAAD,CACEiB,GAAG,QACHjB,UAAU,SAFZ,uBAMA,cAAC,IAAD,CACEiB,GAAG,UACHjB,UAAU,SAFZ,4BAQF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,IAAIG,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aC7B/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6d1bafb3.chunk.js","sourcesContent":["export const HomePage = () => (\n  <>\n    <h1 style={{ textAlign: 'center' }}>Home Page</h1>\n  </>\n);\n","const BASE_API = 'https://mate-academy.github.io/react_people-table/api/';\n\nexport const getPeople = async () => {\n  const response = await fetch(`${BASE_API}/people.json`);\n\n  return response.json();\n};\n","import { FC } from 'react';\n\ntype Props = {\n  person:PersonWithParents;\n};\n\nexport const PersonRow:FC<Props> = ({ person }) => {\n  const {\n    name,\n    born,\n    sex, died,\n    father,\n    mother,\n  } = person;\n  const unknown = <p className=\"unknown\">Name is unknown</p>;\n\n  return (\n    <tr className=\"Person\">\n      <td className=\"td_name\">{name}</td>\n      <td className=\"td_sex\">{sex}</td>\n      <td className=\"td_born\">{born}</td>\n      <td className=\"td_died\">{died}</td>\n      <td className=\"td_motherName\">{mother?.name || unknown}</td>\n      <td className=\"td_fatherName\">{father?.name || unknown}</td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport './PeopleTable.scss';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\ntype Props = {\n  people: PersonWithParents[];\n};\n\nexport const PeopleTable:FC<Props> = ({ people }) => (\n  <>\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr>\n          <td className=\"td_name td_bold\">Name</td>\n          <td className=\"td_sex td_bold\">Sex</td>\n          <td className=\"td_born td_bold\">Born</td>\n          <td className=\"td_died td_bold\">Died</td>\n          <td className=\"td_motherName td_bold\">Mother</td>\n          <td className=\"td_fatherName td_bold\">Father</td>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          people.map(person => {\n            return (\n              <PersonRow\n                key={person.name}\n                person={person}\n              />\n            );\n          })\n        }\n      </tbody>\n    </table>\n  </>\n);\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api/api';\nimport { PeopleTable } from './PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<PersonWithParents[] | []>([]);\n\n  const getNewPerson = () => {\n    getPeople().then(res => {\n      const newPersonWithParents:PersonWithParents[] = res.map(\n        (person:Person) => ({\n          ...person,\n          father: res.find(\n            (parent:Person) => parent.name === person.fatherName,\n          ) || null,\n          mother: res.find(\n            (parent:Person) => parent.name === person.motherName,\n          ) || null,\n        }),\n      );\n\n      setPeople(newPersonWithParents);\n    });\n  };\n\n  useEffect(() => {\n    getNewPerson();\n  }, []);\n\n  return (\n    <>\n      <PeopleTable\n        people={people}\n      />\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <div>\n    <h1 style={{ textAlign: 'center' }}>Page not found</h1>\n  </div>\n);\n","import './App.scss';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>People table</h1>\n\n    <div>\n      <NavLink\n        to=\"/home\"\n        className=\"button\"\n      >\n        Home Page\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        className=\"button\"\n      >\n        People Page\n      </NavLink>\n    </div>\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}